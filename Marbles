/*
 * The purpose of this program is to rearange black and white marbles <br>
* CSC 1350 Lab # 7
* @author Derek Delahoussaye
* @since 30 October 2017
 */
package marblesrearranger;

/**
 *
 * @author derek
 */

import java.util.Arrays;
import java.util.Scanner;

public class MarblesRearranger {

    /**
     * @param args the command line arguments
     */
    /**
* Gives the index of the first, left-most, white marble.
* @param marbles an array of 0’s and 1’s denoting black
* and white marbles, respectively.
* @return the index of the left-most white (1) marble.
*/
    
public static int getFirstWhiteIndex(int[] marbles){
      
        int i;
        for (i = 0;  i <marbles.length; i++)
        {
           if (marbles[i]==1)
              break;
        }
        return i;
        }
        /**
* Determines the index of next left-most black marble
* (0) to the right of the index from or the number
* of marbles (length of the array) if there is none.
* @param marbles an array of 0’s and 1’s denoting black
* and white marbles, respectively.
* @param from the index of a white marble
* @return the index of the next left-most black marble
*/
public static int getNextBlackIndex(int[] marbles, int from){
    int i;
    
    for (i = from; i < marbles.length; i++)
    {
        if (marbles[i] == 0)
            break;   
    }
    return i;

      
}

        /**
* Exchanges the elements with the specified indices
* @param marbles an array of 0’s and 1’s denoting black
* and white marbles, respectively.
* @param i an index of a marble
* @param j another index of a marble
*/
public static void swap(int[] marbles, int i, int j){
    int tmp = marbles [i];
    marbles[i] = marbles [j];
    marbles [j]= tmp;
    
}
    


    public static void main(String[] args) {
        Scanner cin = new Scanner (System.in);
        int[] firstBinOfMarbles = {1, 1, 0, 0, 0, 1, 0, 0 };
           /** int [] secondBinOfMarbles = {0, 0, 0, 0, 1, 1, 1, 1, 0, 0};
            int from = getFirstWhiteIndex(firstBinOfMarbles);
            int blackindex = getFirstWhiteIndex(secondBinOfMarbles);
         */   
            
            int i = 0;
            do {
            
               int firstwhite = getFirstWhiteIndex(firstBinOfMarbles);
               int nextblack = getNextBlackIndex(firstBinOfMarbles,firstwhite);
               
               System.out.println("marbles[] = " + Arrays.toString(firstBinOfMarbles));
                if (nextblack == firstBinOfMarbles.length) {
                    System.out.println("*** no black marble found to the right of leftmost white marble");
                break;
                }

                swap(firstBinOfMarbles, firstwhite, nextblack);
                    System.out.printf("Left-most white index = %d, Next Black Index = %d\n", firstwhite,nextblack);
                    System.out.printf("# of Marbles Examined for Next Black Index: %d %n",nextblack-firstwhite );
                              i++;
                               }
                                    while (i < firstBinOfMarbles.length);
    
            
            
            
            
    }
}
